// This file is auto-generated by @hey-api/openapi-ts

/**
 * AuthStatus
 */
export type AuthStatus = {
    /**
     * Authenticated
     */
    authenticated: boolean;
    /**
     * Isadmin
     */
    isAdmin: boolean;
    /**
     * Email
     */
    email: string;//| null;
    /**
     * Name
     */
    name: string; //| null;
};

/**
 * BoardType
 */
export type BoardType = 'institutional' | 'executive';

/**
 * ErrorDetail
 */
export type ErrorDetail = {
    /**
     * Detail
     */
    detail: string;
    /**
     * Code
     */
    code?: string | null;
};

/**
 * GroupCreate
 */
export type GroupCreate = {
    /**
     * Name
     */
    name: string;
};

/**
 * GroupMemberCreate
 */
export type GroupMemberCreate = {
    /**
     * Group Id
     */
    group_id: number;
    /**
     * Member Id
     */
    member_id: number;
    role: GroupRole;
};

/**
 * GroupMemberResponse
 */
export type GroupMemberResponse = {
    /**
     * Group Id
     */
    group_id: number;
    /**
     * Member Id
     */
    member_id: number;
    role: GroupRole;
    /**
     * Id
     */
    id: number;
};

/**
 * GroupMemberUpdate
 */
export type GroupMemberUpdate = {
    role?: GroupRole | null;
};

/**
 * GroupResponse
 */
export type GroupResponse = {
    /**
     * Name
     */
    name: string;
    /**
     * Id
     */
    id: number;
};

/**
 * GroupRole
 */
export type GroupRole = 'member' | 'convenor' | 'co-convenor';

/**
 * GroupUpdate
 */
export type GroupUpdate = {
    /**
     * Name
     */
    name?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * InstitutionCreate
 */
export type InstitutionCreate = {
    /**
     * Full Name
     */
    full_name: string;
    /**
     * Short Name
     */
    short_name: string;
    /**
     * Country
     */
    country: string;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Latitude
     */
    latitude?: number | null;
    /**
     * Longitude
     */
    longitude?: number | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Date Added
     */
    date_added: string;
    /**
     * Date Removed
     */
    date_removed?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
};

/**
 * InstitutionResponse
 */
export type InstitutionResponse = {
    /**
     * Full Name
     */
    full_name: string;
    /**
     * Short Name
     */
    short_name: string;
    /**
     * Country
     */
    country: string;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Latitude
     */
    latitude?: number | null;
    /**
     * Longitude
     */
    longitude?: number | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Date Added
     */
    date_added: string;
    /**
     * Date Removed
     */
    date_removed?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Id
     */
    id: number;
};

/**
 * InstitutionUpdate
 */
export type InstitutionUpdate = {
    /**
     * Full Name
     */
    full_name?: string | null;
    /**
     * Short Name
     */
    short_name?: string | null;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Region
     */
    region?: string | null;
    /**
     * Latitude
     */
    latitude?: number | null;
    /**
     * Longitude
     */
    longitude?: number | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Date Added
     */
    date_added?: string | null;
    /**
     * Date Removed
     */
    date_removed?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
};

/**
 * InstitutionalBoardMemberCreate
 */
export type InstitutionalBoardMemberCreate = {
    /**
     * Member Id
     */
    member_id: number;
    /**
     * Institution Id
     */
    institution_id: number;
    board_type: BoardType;
    /**
     * Role
     */
    role?: string | null;
    /**
     * Start Date
     */
    start_date: string;
    /**
     * End Date
     */
    end_date?: string | null;
    /**
     * Is Chair
     */
    is_chair?: boolean;
};

/**
 * InstitutionalBoardMemberResponse
 */
export type InstitutionalBoardMemberResponse = {
    /**
     * Member Id
     */
    member_id: number;
    /**
     * Institution Id
     */
    institution_id: number;
    board_type: BoardType;
    /**
     * Role
     */
    role?: string | null;
    /**
     * Start Date
     */
    start_date: string;
    /**
     * End Date
     */
    end_date?: string | null;
    /**
     * Is Chair
     */
    is_chair?: boolean;
    /**
     * Id
     */
    id: number;
};

/**
 * InstitutionalBoardMemberUpdate
 */
export type InstitutionalBoardMemberUpdate = {
    /**
     * Member Id
     */
    member_id?: number | null;
    /**
     * Institution Id
     */
    institution_id?: number | null;
    board_type?: BoardType | null;
    /**
     * Role
     */
    role?: string | null;
    /**
     * Start Date
     */
    start_date?: string | null;
    /**
     * End Date
     */
    end_date?: string | null;
    /**
     * Is Chair
     */
    is_chair?: boolean | null;
};

/**
 * MemberCreate
 */
export type MemberCreate = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Email
     */
    email: string;
    /**
     * Orcid
     */
    orcid?: string | null;
    /**
     * Preferred Author Name
     */
    preferred_author_name?: string | null;
    /**
     * Institution Id
     */
    institution_id: number;
    /**
     * Date Joined
     */
    date_joined: string;
    /**
     * Date Left
     */
    date_left?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Experimental Data
     */
    experimental_data?: {
        [key: string]: unknown;
    } | null;
};

/**
 * MemberResponse
 */
export type MemberResponse = {
    /**
     * First Name
     */
    first_name: string;
    /**
     * Last Name
     */
    last_name: string;
    /**
     * Email
     */
    email: string;
    /**
     * Orcid
     */
    orcid?: string | null;
    /**
     * Preferred Author Name
     */
    preferred_author_name?: string | null;
    /**
     * Institution Id
     */
    institution_id: number;
    /**
     * Date Joined
     */
    date_joined: string;
    /**
     * Date Left
     */
    date_left?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean;
    /**
     * Experimental Data
     */
    experimental_data?: {
        [key: string]: unknown;
    } | null;
    /**
     * Id
     */
    id: number;
    institution?: InstitutionResponse | null;
};

/**
 * MemberUpdate
 */
export type MemberUpdate = {
    /**
     * First Name
     */
    first_name?: string | null;
    /**
     * Last Name
     */
    last_name?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Orcid
     */
    orcid?: string | null;
    /**
     * Preferred Author Name
     */
    preferred_author_name?: string | null;
    /**
     * Institution Id
     */
    institution_id?: number | null;
    /**
     * Date Joined
     */
    date_joined?: string | null;
    /**
     * Date Left
     */
    date_left?: string | null;
    /**
     * Is Active
     */
    is_active?: boolean | null;
    /**
     * Experimental Data
     */
    experimental_data?: {
        [key: string]: unknown;
    } | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type UserLoginData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/user/login';
};

export type UserLoginResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UserLoginCallbackData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/user/callback';
};

export type UserLoginCallbackResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UserLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/user/logout';
};

export type UserLogoutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UserCheckAuthStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/user/check-auth';
};

export type UserCheckAuthStatusErrors = {
    /**
     * Unauthorized: Token expired or invalid
     */
    401: ErrorDetail;
    /**
     * Internal Server Error
     */
    500: ErrorDetail;
};

export type UserCheckAuthStatusError = UserCheckAuthStatusErrors[keyof UserCheckAuthStatusErrors];

export type UserCheckAuthStatusResponses = {
    /**
     * Successful Response
     */
    200: AuthStatus;
};

export type UserCheckAuthStatusResponse = UserCheckAuthStatusResponses[keyof UserCheckAuthStatusResponses];

export type InstitutionsListInstitutionsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/institutions/';
};

export type InstitutionsListInstitutionsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InstitutionsListInstitutionsError = InstitutionsListInstitutionsErrors[keyof InstitutionsListInstitutionsErrors];

export type InstitutionsListInstitutionsResponses = {
    /**
     * Response Institutions-List Institutions
     * Successful Response
     */
    200: Array<InstitutionResponse>;
};

export type InstitutionsListInstitutionsResponse = InstitutionsListInstitutionsResponses[keyof InstitutionsListInstitutionsResponses];

export type InstitutionsCreateInstitutionData = {
    body: InstitutionCreate;
    path?: never;
    query?: never;
    url: '/api/v1/institutions/';
};

export type InstitutionsCreateInstitutionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InstitutionsCreateInstitutionError = InstitutionsCreateInstitutionErrors[keyof InstitutionsCreateInstitutionErrors];

export type InstitutionsCreateInstitutionResponses = {
    /**
     * Successful Response
     */
    201: InstitutionResponse;
};

export type InstitutionsCreateInstitutionResponse = InstitutionsCreateInstitutionResponses[keyof InstitutionsCreateInstitutionResponses];

export type InstitutionsDeleteInstitutionData = {
    body?: never;
    path: {
        /**
         * Institution Id
         */
        institution_id: number;
    };
    query?: never;
    url: '/api/v1/institutions/{institution_id}';
};

export type InstitutionsDeleteInstitutionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InstitutionsDeleteInstitutionError = InstitutionsDeleteInstitutionErrors[keyof InstitutionsDeleteInstitutionErrors];

export type InstitutionsDeleteInstitutionResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type InstitutionsDeleteInstitutionResponse = InstitutionsDeleteInstitutionResponses[keyof InstitutionsDeleteInstitutionResponses];

export type InstitutionsGetInstitutionData = {
    body?: never;
    path: {
        /**
         * Institution Id
         */
        institution_id: number;
    };
    query?: never;
    url: '/api/v1/institutions/{institution_id}';
};

export type InstitutionsGetInstitutionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InstitutionsGetInstitutionError = InstitutionsGetInstitutionErrors[keyof InstitutionsGetInstitutionErrors];

export type InstitutionsGetInstitutionResponses = {
    /**
     * Successful Response
     */
    200: InstitutionResponse;
};

export type InstitutionsGetInstitutionResponse = InstitutionsGetInstitutionResponses[keyof InstitutionsGetInstitutionResponses];

export type InstitutionsUpdateInstitutionData = {
    body: InstitutionUpdate;
    path: {
        /**
         * Institution Id
         */
        institution_id: number;
    };
    query?: never;
    url: '/api/v1/institutions/{institution_id}';
};

export type InstitutionsUpdateInstitutionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InstitutionsUpdateInstitutionError = InstitutionsUpdateInstitutionErrors[keyof InstitutionsUpdateInstitutionErrors];

export type InstitutionsUpdateInstitutionResponses = {
    /**
     * Successful Response
     */
    200: InstitutionResponse;
};

export type InstitutionsUpdateInstitutionResponse = InstitutionsUpdateInstitutionResponses[keyof InstitutionsUpdateInstitutionResponses];

export type MembersListMembersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/members/';
};

export type MembersListMembersResponses = {
    /**
     * Response Members-List Members
     * Successful Response
     */
    200: Array<MemberResponse>;
};

export type MembersListMembersResponse = MembersListMembersResponses[keyof MembersListMembersResponses];

export type MembersCreateMemberData = {
    body: MemberCreate;
    path?: never;
    query?: never;
    url: '/api/v1/members/';
};

export type MembersCreateMemberErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MembersCreateMemberError = MembersCreateMemberErrors[keyof MembersCreateMemberErrors];

export type MembersCreateMemberResponses = {
    /**
     * Successful Response
     */
    201: MemberResponse;
};

export type MembersCreateMemberResponse = MembersCreateMemberResponses[keyof MembersCreateMemberResponses];

export type MembersDeleteMemberData = {
    body?: never;
    path: {
        /**
         * Member Id
         */
        member_id: number;
    };
    query?: never;
    url: '/api/v1/members/{member_id}';
};

export type MembersDeleteMemberErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MembersDeleteMemberError = MembersDeleteMemberErrors[keyof MembersDeleteMemberErrors];

export type MembersDeleteMemberResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type MembersDeleteMemberResponse = MembersDeleteMemberResponses[keyof MembersDeleteMemberResponses];

export type MembersGetMemberData = {
    body?: never;
    path: {
        /**
         * Member Id
         */
        member_id: number;
    };
    query?: never;
    url: '/api/v1/members/{member_id}';
};

export type MembersGetMemberErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MembersGetMemberError = MembersGetMemberErrors[keyof MembersGetMemberErrors];

export type MembersGetMemberResponses = {
    /**
     * Successful Response
     */
    200: MemberResponse;
};

export type MembersGetMemberResponse = MembersGetMemberResponses[keyof MembersGetMemberResponses];

export type MembersUpdateMemberData = {
    body: MemberUpdate;
    path: {
        /**
         * Member Id
         */
        member_id: number;
    };
    query?: never;
    url: '/api/v1/members/{member_id}';
};

export type MembersUpdateMemberErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MembersUpdateMemberError = MembersUpdateMemberErrors[keyof MembersUpdateMemberErrors];

export type MembersUpdateMemberResponses = {
    /**
     * Successful Response
     */
    200: MemberResponse;
};

export type MembersUpdateMemberResponse = MembersUpdateMemberResponses[keyof MembersUpdateMemberResponses];

export type BoardMembersListBoardMembershipsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Board Type
         */
        board_type?: BoardType | null;
        /**
         * Member Id
         */
        member_id?: number | null;
        /**
         * Institution Id
         */
        institution_id?: number | null;
    };
    url: '/api/v1/board-members/';
};

export type BoardMembersListBoardMembershipsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BoardMembersListBoardMembershipsError = BoardMembersListBoardMembershipsErrors[keyof BoardMembersListBoardMembershipsErrors];

export type BoardMembersListBoardMembershipsResponses = {
    /**
     * Response Board Members-List Board Memberships
     * Successful Response
     */
    200: Array<InstitutionalBoardMemberResponse>;
};

export type BoardMembersListBoardMembershipsResponse = BoardMembersListBoardMembershipsResponses[keyof BoardMembersListBoardMembershipsResponses];

export type BoardMembersCreateBoardMembershipData = {
    body: InstitutionalBoardMemberCreate;
    path?: never;
    query?: never;
    url: '/api/v1/board-members/';
};

export type BoardMembersCreateBoardMembershipErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BoardMembersCreateBoardMembershipError = BoardMembersCreateBoardMembershipErrors[keyof BoardMembersCreateBoardMembershipErrors];

export type BoardMembersCreateBoardMembershipResponses = {
    /**
     * Successful Response
     */
    201: InstitutionalBoardMemberResponse;
};

export type BoardMembersCreateBoardMembershipResponse = BoardMembersCreateBoardMembershipResponses[keyof BoardMembersCreateBoardMembershipResponses];

export type BoardMembersDeleteBoardMembershipData = {
    body?: never;
    path: {
        /**
         * Ibm Id
         */
        ibm_id: number;
    };
    query?: never;
    url: '/api/v1/board-members/{ibm_id}';
};

export type BoardMembersDeleteBoardMembershipErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BoardMembersDeleteBoardMembershipError = BoardMembersDeleteBoardMembershipErrors[keyof BoardMembersDeleteBoardMembershipErrors];

export type BoardMembersDeleteBoardMembershipResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type BoardMembersDeleteBoardMembershipResponse = BoardMembersDeleteBoardMembershipResponses[keyof BoardMembersDeleteBoardMembershipResponses];

export type BoardMembersGetBoardMembershipData = {
    body?: never;
    path: {
        /**
         * Ibm Id
         */
        ibm_id: number;
    };
    query?: never;
    url: '/api/v1/board-members/{ibm_id}';
};

export type BoardMembersGetBoardMembershipErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BoardMembersGetBoardMembershipError = BoardMembersGetBoardMembershipErrors[keyof BoardMembersGetBoardMembershipErrors];

export type BoardMembersGetBoardMembershipResponses = {
    /**
     * Successful Response
     */
    200: InstitutionalBoardMemberResponse;
};

export type BoardMembersGetBoardMembershipResponse = BoardMembersGetBoardMembershipResponses[keyof BoardMembersGetBoardMembershipResponses];

export type BoardMembersUpdateBoardMembershipData = {
    body: InstitutionalBoardMemberUpdate;
    path: {
        /**
         * Ibm Id
         */
        ibm_id: number;
    };
    query?: never;
    url: '/api/v1/board-members/{ibm_id}';
};

export type BoardMembersUpdateBoardMembershipErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BoardMembersUpdateBoardMembershipError = BoardMembersUpdateBoardMembershipErrors[keyof BoardMembersUpdateBoardMembershipErrors];

export type BoardMembersUpdateBoardMembershipResponses = {
    /**
     * Successful Response
     */
    200: InstitutionalBoardMemberResponse;
};

export type BoardMembersUpdateBoardMembershipResponse = BoardMembersUpdateBoardMembershipResponses[keyof BoardMembersUpdateBoardMembershipResponses];

export type WorkingGroupsListGroupsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/groups/';
};

export type WorkingGroupsListGroupsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsListGroupsError = WorkingGroupsListGroupsErrors[keyof WorkingGroupsListGroupsErrors];

export type WorkingGroupsListGroupsResponses = {
    /**
     * Response Working Groups-List Groups
     * Successful Response
     */
    200: Array<GroupResponse>;
};

export type WorkingGroupsListGroupsResponse = WorkingGroupsListGroupsResponses[keyof WorkingGroupsListGroupsResponses];

export type WorkingGroupsCreateGroupData = {
    body: GroupCreate;
    path?: never;
    query?: never;
    url: '/api/v1/groups/';
};

export type WorkingGroupsCreateGroupErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsCreateGroupError = WorkingGroupsCreateGroupErrors[keyof WorkingGroupsCreateGroupErrors];

export type WorkingGroupsCreateGroupResponses = {
    /**
     * Successful Response
     */
    201: GroupResponse;
};

export type WorkingGroupsCreateGroupResponse = WorkingGroupsCreateGroupResponses[keyof WorkingGroupsCreateGroupResponses];

export type WorkingGroupsDeleteGroupData = {
    body?: never;
    path: {
        /**
         * Group Id
         */
        group_id: number;
    };
    query?: never;
    url: '/api/v1/groups/{group_id}';
};

export type WorkingGroupsDeleteGroupErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsDeleteGroupError = WorkingGroupsDeleteGroupErrors[keyof WorkingGroupsDeleteGroupErrors];

export type WorkingGroupsDeleteGroupResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type WorkingGroupsDeleteGroupResponse = WorkingGroupsDeleteGroupResponses[keyof WorkingGroupsDeleteGroupResponses];

export type WorkingGroupsGetGroupData = {
    body?: never;
    path: {
        /**
         * Group Id
         */
        group_id: number;
    };
    query?: never;
    url: '/api/v1/groups/{group_id}';
};

export type WorkingGroupsGetGroupErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsGetGroupError = WorkingGroupsGetGroupErrors[keyof WorkingGroupsGetGroupErrors];

export type WorkingGroupsGetGroupResponses = {
    /**
     * Successful Response
     */
    200: GroupResponse;
};

export type WorkingGroupsGetGroupResponse = WorkingGroupsGetGroupResponses[keyof WorkingGroupsGetGroupResponses];

export type WorkingGroupsUpdateGroupData = {
    body: GroupUpdate;
    path: {
        /**
         * Group Id
         */
        group_id: number;
    };
    query?: never;
    url: '/api/v1/groups/{group_id}';
};

export type WorkingGroupsUpdateGroupErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsUpdateGroupError = WorkingGroupsUpdateGroupErrors[keyof WorkingGroupsUpdateGroupErrors];

export type WorkingGroupsUpdateGroupResponses = {
    /**
     * Successful Response
     */
    200: GroupResponse;
};

export type WorkingGroupsUpdateGroupResponse = WorkingGroupsUpdateGroupResponses[keyof WorkingGroupsUpdateGroupResponses];

export type WorkingGroupsListGroupMembersOfGroupData = {
    body?: never;
    path: {
        /**
         * Group Id
         */
        group_id: number;
    };
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
        /**
         * Role
         */
        role?: GroupRole | null;
    };
    url: '/api/v1/groups/{group_id}/members';
};

export type WorkingGroupsListGroupMembersOfGroupErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsListGroupMembersOfGroupError = WorkingGroupsListGroupMembersOfGroupErrors[keyof WorkingGroupsListGroupMembersOfGroupErrors];

export type WorkingGroupsListGroupMembersOfGroupResponses = {
    /**
     * Response Working Groups-List Group Members Of Group
     * Successful Response
     */
    200: Array<GroupMemberResponse>;
};

export type WorkingGroupsListGroupMembersOfGroupResponse = WorkingGroupsListGroupMembersOfGroupResponses[keyof WorkingGroupsListGroupMembersOfGroupResponses];

export type WorkingGroupsAddMemberToGroupData = {
    body: GroupMemberCreate;
    path: {
        /**
         * Group Id
         */
        group_id: number;
    };
    query: {
        /**
         * Member Id
         */
        member_id: number;
    };
    url: '/api/v1/groups/{group_id}/members';
};

export type WorkingGroupsAddMemberToGroupErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsAddMemberToGroupError = WorkingGroupsAddMemberToGroupErrors[keyof WorkingGroupsAddMemberToGroupErrors];

export type WorkingGroupsAddMemberToGroupResponses = {
    /**
     * Successful Response
     */
    201: GroupMemberResponse;
};

export type WorkingGroupsAddMemberToGroupResponse = WorkingGroupsAddMemberToGroupResponses[keyof WorkingGroupsAddMemberToGroupResponses];

export type WorkingGroupsDeleteGroupMemberData = {
    body?: never;
    path: {
        /**
         * Gm Id
         */
        gm_id: number;
    };
    query?: never;
    url: '/api/v1/groups/group-members/{gm_id}';
};

export type WorkingGroupsDeleteGroupMemberErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsDeleteGroupMemberError = WorkingGroupsDeleteGroupMemberErrors[keyof WorkingGroupsDeleteGroupMemberErrors];

export type WorkingGroupsDeleteGroupMemberResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type WorkingGroupsDeleteGroupMemberResponse = WorkingGroupsDeleteGroupMemberResponses[keyof WorkingGroupsDeleteGroupMemberResponses];

export type WorkingGroupsUpdateGroupMemberRoleData = {
    body: GroupMemberUpdate;
    path: {
        /**
         * Gm Id
         */
        gm_id: number;
    };
    query?: never;
    url: '/api/v1/groups/group-members/{gm_id}';
};

export type WorkingGroupsUpdateGroupMemberRoleErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type WorkingGroupsUpdateGroupMemberRoleError = WorkingGroupsUpdateGroupMemberRoleErrors[keyof WorkingGroupsUpdateGroupMemberRoleErrors];

export type WorkingGroupsUpdateGroupMemberRoleResponses = {
    /**
     * Successful Response
     */
    200: GroupMemberResponse;
};

export type WorkingGroupsUpdateGroupMemberRoleResponse = WorkingGroupsUpdateGroupMemberRoleResponses[keyof WorkingGroupsUpdateGroupMemberRoleResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};