// This file is auto-generated by @hey-api/openapi-ts

export const AuthStatusSchema = {
    properties: {
        authenticated: {
            type: 'boolean',
            title: 'Authenticated'
        },
        isAdmin: {
            type: 'boolean',
            title: 'Isadmin'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        name: {
            type: 'string',
            title: 'Name'
        }
    },
    type: 'object',
    required: ['authenticated', 'isAdmin', 'email', 'name'],
    title: 'AuthStatus'
} as const;

export const BoardTypeSchema = {
    type: 'string',
    enum: ['institutional', 'executive'],
    title: 'BoardType'
} as const;

export const ErrorDetailSchema = {
    properties: {
        detail: {
            type: 'string',
            title: 'Detail'
        },
        code: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Code'
        }
    },
    type: 'object',
    required: ['detail'],
    title: 'ErrorDetail'
} as const;

export const GroupCreateSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        }
    },
    type: 'object',
    required: ['name'],
    title: 'GroupCreate'
} as const;

export const GroupMemberCreateSchema = {
    properties: {
        group_id: {
            type: 'integer',
            title: 'Group Id'
        },
        member_id: {
            type: 'integer',
            title: 'Member Id'
        },
        role: {
            '$ref': '#/components/schemas/GroupRole'
        }
    },
    type: 'object',
    required: ['group_id', 'member_id', 'role'],
    title: 'GroupMemberCreate'
} as const;

export const GroupMemberResponseSchema = {
    properties: {
        group_id: {
            type: 'integer',
            title: 'Group Id'
        },
        member_id: {
            type: 'integer',
            title: 'Member Id'
        },
        role: {
            '$ref': '#/components/schemas/GroupRole'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['group_id', 'member_id', 'role', 'id'],
    title: 'GroupMemberResponse'
} as const;

export const GroupMemberUpdateSchema = {
    properties: {
        role: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/GroupRole'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    title: 'GroupMemberUpdate'
} as const;

export const GroupResponseSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['name', 'id'],
    title: 'GroupResponse'
} as const;

export const GroupRoleSchema = {
    type: 'string',
    enum: ['member', 'convenor', 'co-convenor'],
    title: 'GroupRole'
} as const;

export const GroupUpdateSchema = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        }
    },
    type: 'object',
    title: 'GroupUpdate'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const InstitutionCreateSchema = {
    properties: {
        full_name: {
            type: 'string',
            maxLength: 50,
            title: 'Full Name'
        },
        short_name: {
            type: 'string',
            title: 'Short Name'
        },
        country: {
            type: 'string',
            title: 'Country'
        },
        region: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Region'
        },
        latitude: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Latitude'
        },
        longitude: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Longitude'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        address: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        date_added: {
            type: 'string',
            format: 'date',
            title: 'Date Added'
        },
        date_removed: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Removed'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        entityid: {
            type: 'string',
            title: 'Entityid'
        },
        rorid: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Rorid'
        }
    },
    type: 'object',
    required: ['full_name', 'short_name', 'country', 'date_added', 'entityid'],
    title: 'InstitutionCreate',
    description: 'Schema for creating a new Institution.'
} as const;

export const InstitutionResponseSchema = {
    properties: {
        full_name: {
            type: 'string',
            maxLength: 50,
            title: 'Full Name'
        },
        short_name: {
            type: 'string',
            title: 'Short Name'
        },
        country: {
            type: 'string',
            title: 'Country'
        },
        region: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Region'
        },
        latitude: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Latitude'
        },
        longitude: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Longitude'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        address: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        date_added: {
            type: 'string',
            format: 'date',
            title: 'Date Added'
        },
        date_removed: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Removed'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        entityid: {
            type: 'string',
            title: 'Entityid'
        },
        rorid: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Rorid'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['full_name', 'short_name', 'country', 'date_added', 'entityid', 'id'],
    title: 'InstitutionResponse',
    description: 'Schema for returning Institution data, includes the ID.'
} as const;

export const InstitutionUpdateSchema = {
    properties: {
        full_name: {
            anyOf: [
                {
                    type: 'string',
                    maxLength: 50
                },
                {
                    type: 'null'
                }
            ],
            title: 'Full Name'
        },
        short_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Short Name'
        },
        country: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Country'
        },
        region: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Region'
        },
        latitude: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Latitude'
        },
        longitude: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Longitude'
        },
        city: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'City'
        },
        address: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        date_added: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Added'
        },
        date_removed: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Removed'
        },
        is_active: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Active'
        },
        rorid: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Rorid'
        }
    },
    type: 'object',
    title: 'InstitutionUpdate',
    description: 'Schema for updating an existing Institution, all fields are optional.'
} as const;

export const InstitutionalBoardMemberCreateSchema = {
    properties: {
        member_id: {
            type: 'integer',
            title: 'Member Id'
        },
        institution_id: {
            type: 'integer',
            title: 'Institution Id'
        },
        board_type: {
            '$ref': '#/components/schemas/BoardType'
        },
        role: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Role'
        },
        start_date: {
            type: 'string',
            format: 'date',
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        is_chair: {
            type: 'boolean',
            title: 'Is Chair',
            default: false
        }
    },
    type: 'object',
    required: ['member_id', 'institution_id', 'board_type', 'start_date'],
    title: 'InstitutionalBoardMemberCreate'
} as const;

export const InstitutionalBoardMemberResponseSchema = {
    properties: {
        member_id: {
            type: 'integer',
            title: 'Member Id'
        },
        institution_id: {
            type: 'integer',
            title: 'Institution Id'
        },
        board_type: {
            '$ref': '#/components/schemas/BoardType'
        },
        role: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Role'
        },
        start_date: {
            type: 'string',
            format: 'date',
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        is_chair: {
            type: 'boolean',
            title: 'Is Chair',
            default: false
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['member_id', 'institution_id', 'board_type', 'start_date', 'id'],
    title: 'InstitutionalBoardMemberResponse'
} as const;

export const InstitutionalBoardMemberUpdateSchema = {
    properties: {
        member_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Member Id'
        },
        institution_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Institution Id'
        },
        board_type: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/BoardType'
                },
                {
                    type: 'null'
                }
            ]
        },
        role: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Role'
        },
        start_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Start Date'
        },
        end_date: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'End Date'
        },
        is_chair: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Chair'
        }
    },
    type: 'object',
    title: 'InstitutionalBoardMemberUpdate'
} as const;

export const MemberCreateSchema = {
    properties: {
        first_name: {
            type: 'string',
            title: 'First Name'
        },
        last_name: {
            type: 'string',
            title: 'Last Name'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        orcid: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Orcid'
        },
        preferred_author_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Preferred Author Name'
        },
        institution_id: {
            type: 'integer',
            title: 'Institution Id'
        },
        date_joined: {
            type: 'string',
            format: 'date',
            title: 'Date Joined'
        },
        date_left: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Left'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        experimental_data: {
            anyOf: [
                {
                    additionalProperties: true,
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Experimental Data'
        }
    },
    type: 'object',
    required: ['first_name', 'last_name', 'email', 'institution_id', 'date_joined'],
    title: 'MemberCreate'
} as const;

export const MemberResponseSchema = {
    properties: {
        first_name: {
            type: 'string',
            title: 'First Name'
        },
        last_name: {
            type: 'string',
            title: 'Last Name'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        orcid: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Orcid'
        },
        preferred_author_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Preferred Author Name'
        },
        institution_id: {
            type: 'integer',
            title: 'Institution Id'
        },
        date_joined: {
            type: 'string',
            format: 'date',
            title: 'Date Joined'
        },
        date_left: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Left'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        experimental_data: {
            anyOf: [
                {
                    additionalProperties: true,
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Experimental Data'
        },
        id: {
            type: 'integer',
            title: 'Id'
        },
        institution: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/InstitutionResponse'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['first_name', 'last_name', 'email', 'institution_id', 'date_joined', 'id'],
    title: 'MemberResponse'
} as const;

export const MemberUpdateSchema = {
    properties: {
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        email: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        orcid: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Orcid'
        },
        preferred_author_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Preferred Author Name'
        },
        institution_id: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Institution Id'
        },
        date_joined: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Joined'
        },
        date_left: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Date Left'
        },
        is_active: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Active'
        },
        experimental_data: {
            anyOf: [
                {
                    additionalProperties: true,
                    type: 'object'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Experimental Data'
        }
    },
    type: 'object',
    title: 'MemberUpdate'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;